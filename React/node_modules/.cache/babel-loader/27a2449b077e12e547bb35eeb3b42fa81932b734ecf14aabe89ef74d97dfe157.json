{"ast":null,"code":";\n(function () {\n  var object = typeof exports != 'undefined' ? exports : this; // #8: web workers\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error();\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (object.btoa = function (input) {\n    for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars, output = '';\n    // if the next input index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    input.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {\n      charCode = input.charCodeAt(idx += 3 / 4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (object.atob = function (input) {\n    input = input.replace(/=+$/, '');\n    if (input.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = input.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n    // and if not first of each 4 characters,\n    // convert the first 8 bits to one ascii character\n    bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n})();","map":{"version":3,"names":["object","exports","chars","InvalidCharacterError","message","prototype","Error","name","btoa","input","block","charCode","idx","map","output","charAt","charCodeAt","atob","replace","length","bc","bs","buffer","String","fromCharCode","indexOf"],"sources":["C:/Users/victo/Documents/GitHub/Projeto_Linos/React/node_modules/Base64/base64.js"],"sourcesContent":[";(function () {\n\n  var object = typeof exports != 'undefined' ? exports : this; // #8: web workers\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error;\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next input index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      input.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = input.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    input = input.replace(/=+$/, '');\n    if (input.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = input.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n"],"mappings":"AAAA;AAAE,aAAY;EAEZ,IAAIA,MAAM,GAAG,OAAOC,OAAO,IAAI,WAAW,GAAGA,OAAO,GAAG,IAAI,CAAC,CAAC;EAC7D,IAAIC,KAAK,GAAG,mEAAmE;EAE/E,SAASC,qBAAqBA,CAACC,OAAO,EAAE;IACtC,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EACAD,qBAAqB,CAACE,SAAS,GAAG,IAAIC,KAAK,CAAD,CAAC;EAC3CH,qBAAqB,CAACE,SAAS,CAACE,IAAI,GAAG,uBAAuB;;EAE9D;EACA;EACAP,MAAM,CAACQ,IAAI,KACXR,MAAM,CAACQ,IAAI,GAAG,UAAUC,KAAK,EAAE;IAC7B;IACE;IACA,IAAIC,KAAK,EAAEC,QAAQ,EAAEC,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAGX,KAAK,EAAEY,MAAM,GAAG,EAAE;IACtD;IACA;IACA;IACAL,KAAK,CAACM,MAAM,CAACH,GAAG,GAAG,CAAC,CAAC,KAAKC,GAAG,GAAG,GAAG,EAAED,GAAG,GAAG,CAAC,CAAC;IAC7C;IACAE,MAAM,IAAID,GAAG,CAACE,MAAM,CAAC,EAAE,GAAGL,KAAK,IAAI,CAAC,GAAGE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EACnD;MACAD,QAAQ,GAAGF,KAAK,CAACO,UAAU,CAACJ,GAAG,IAAI,CAAC,GAAC,CAAC,CAAC;MACvC,IAAID,QAAQ,GAAG,IAAI,EAAE;QACnB,MAAM,IAAIR,qBAAqB,CAAC,0FAA0F,CAAC;MAC7H;MACAO,KAAK,GAAGA,KAAK,IAAI,CAAC,GAAGC,QAAQ;IAC/B;IACA,OAAOG,MAAM;EACf,CAAC,CAAC;;EAEF;EACA;EACAd,MAAM,CAACiB,IAAI,KACXjB,MAAM,CAACiB,IAAI,GAAG,UAAUR,KAAK,EAAE;IAC7BA,KAAK,GAAGA,KAAK,CAACS,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAChC,IAAIT,KAAK,CAACU,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE;MACzB,MAAM,IAAIhB,qBAAqB,CAAC,mEAAmE,CAAC;IACtG;IACA;IACE;IACA,IAAIiB,EAAE,GAAG,CAAC,EAAEC,EAAE,EAAEC,MAAM,EAAEV,GAAG,GAAG,CAAC,EAAEE,MAAM,GAAG,EAAE;IAC5C;IACAQ,MAAM,GAAGb,KAAK,CAACM,MAAM,CAACH,GAAG,EAAE,CAAC;IAC5B;IACA,CAACU,MAAM,KAAKD,EAAE,GAAGD,EAAE,GAAG,CAAC,GAAGC,EAAE,GAAG,EAAE,GAAGC,MAAM,GAAGA,MAAM;IACjD;IACA;IACAF,EAAE,EAAE,GAAG,CAAC,CAAC,GAAGN,MAAM,IAAIS,MAAM,CAACC,YAAY,CAAC,GAAG,GAAGH,EAAE,KAAK,CAAC,CAAC,GAAGD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAC1E;MACA;MACAE,MAAM,GAAGpB,KAAK,CAACuB,OAAO,CAACH,MAAM,CAAC;IAChC;IACA,OAAOR,MAAM;EACf,CAAC,CAAC;AAEJ,CAAC,EAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}