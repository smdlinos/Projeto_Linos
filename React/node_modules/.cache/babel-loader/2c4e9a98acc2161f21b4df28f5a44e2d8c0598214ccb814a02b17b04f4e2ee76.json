{"ast":null,"code":"import _slicedToArray from \"C:/Users/victo/Documents/GitHub/Projeto_Linos/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\victo\\\\Documents\\\\GitHub\\\\Projeto_Linos\\\\React\\\\src\\\\pages\\\\Reset.js\",\n  _s = $RefreshSig$();\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link, useNavigate } from \"react-router-dom\";\nimport \"../components/Tela.css\";\nimport Header from \"../components/Header.js\";\nimport Reset3 from \"../components/Reset/Reset3\";\nimport SendEmail from \"../components/Reset/SendEmail\";\nimport ConfirmCode from \"../components/Reset/ConfirmCode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Reset() {\n  _s();\n  // essa página deve possuir 3 componentes dinâmicos, confirmar email => confirmar código => mudar a senha\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password1 = _useState4[0],\n    setPassword1 = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    code = _useState8[0],\n    setCode = _useState8[1];\n  var navigate = useNavigate();\n  var _useState9 = useState(1),\n    _useState10 = _slicedToArray(_useState9, 2),\n    page = _useState10[0],\n    setPage = _useState10[1];\n  var cadastroUsuario = function cadastroUsuario() {\n    console.log('teste');\n  };\n\n  // <Button onClick={(e) => {\n  //       if (page == 1) {\n  //         setPage(2);\n  //       } else if (page == 2){\n  //         setPage(3)\n  //       } else if (page == 3) {\n  //         setPage(1);\n  //       }\n  //     }}>Mudar</Button>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: page == 1 ? /*#__PURE__*/_jsxDEV(SendEmail, {\n      email: function email(e) {\n        return setEmail(e.value.target);\n      },\n      form: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 20\n    }, this) : page == 2 ? /*#__PURE__*/_jsxDEV(ConfirmCode, {\n      cadastro: cadastroUsuario,\n      redirect: redirect,\n      navigate: navigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 102\n    }, this) : /*#__PURE__*/_jsxDEV(Reset3, {\n      cadastro: cadastroUsuario,\n      redirect: redirect,\n      navigate: navigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}\n_s(Reset, \"wpPV9tS3sHR4EvHKZaizmZGBKgU=\", false, function () {\n  return [useNavigate];\n});\n_c = Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["Button","Form","Row","Col","useState","BrowserRouter","Router","Routes","Route","Link","useNavigate","Header","Reset3","SendEmail","ConfirmCode","jsxDEV","_jsxDEV","Reset","_s","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","password1","setPassword1","_useState5","_useState6","email","setEmail","_useState7","_useState8","code","setCode","navigate","_useState9","_useState10","page","setPage","cadastroUsuario","console","log","children","e","value","target","form","fileName","_jsxFileName","lineNumber","columnNumber","cadastro","redirect","_c","$RefreshReg$"],"sources":["C:/Users/victo/Documents/GitHub/Projeto_Linos/React/src/pages/Reset.js"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { useState } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Link, useNavigate} from \"react-router-dom\";\r\nimport \"../components/Tela.css\"\r\nimport Header from \"../components/Header.js\";\r\nimport Reset3 from \"../components/Reset/Reset3\";\r\nimport SendEmail from \"../components/Reset/SendEmail\";\r\nimport ConfirmCode from \"../components/Reset/ConfirmCode\";\r\n\r\n\r\nexport default function Reset() {\r\n// essa página deve possuir 3 componentes dinâmicos, confirmar email => confirmar código => mudar a senha\r\n  const [password, setPassword] = useState()\r\n  const [password1, setPassword1] = useState()\r\n\r\n  const [email, setEmail] = useState();\r\n  const [code, setCode] = useState();\r\n\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [page, setPage] = useState(1);\r\n\r\n  const cadastroUsuario = () => {\r\n    console.log('teste');\r\n  }\r\n\r\n  // <Button onClick={(e) => {\r\n  //       if (page == 1) {\r\n  //         setPage(2);\r\n  //       } else if (page == 2){\r\n  //         setPage(3)\r\n  //       } else if (page == 3) {\r\n  //         setPage(1);\r\n  //       }\r\n  //     }}>Mudar</Button>\r\n\r\n  return ( \r\n      <div>\r\n      {page == 1 ? <SendEmail email={(e) => setEmail(e.value.target)} form={setPage}/> : page == 2 ? <ConfirmCode cadastro={cadastroUsuario} redirect={redirect} navigate={navigate}/> : \r\n      <Reset3 cadastro={cadastroUsuario} redirect={redirect} navigate={navigate}/>}\r\n\r\n      </div>\r\n    )\r\n\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,WAAW,QAAO,kBAAkB;AAC3F,OAAO,wBAAwB;AAC/B,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,SAAS,MAAM,+BAA+B;AACrD,OAAOC,WAAW,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1D,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAChC;EACE,IAAAC,SAAA,GAAgCf,QAAQ,CAAC,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAkCpB,QAAQ,CAAC,CAAC;IAAAqB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9B,IAAAG,UAAA,GAA0BxB,QAAQ,CAAC,CAAC;IAAAyB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA7BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAAwB5B,QAAQ,CAAC,CAAC;IAAA6B,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA3BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EAGpB,IAAMG,QAAQ,GAAG1B,WAAW,CAAC,CAAC;EAE9B,IAAA2B,UAAA,GAAwBjC,QAAQ,CAAC,CAAC,CAAC;IAAAkC,WAAA,GAAAjB,cAAA,CAAAgB,UAAA;IAA5BE,IAAI,GAAAD,WAAA;IAAEE,OAAO,GAAAF,WAAA;EAEpB,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5BC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACtB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI3B,OAAA;IAAA4B,QAAA,EACCL,IAAI,IAAI,CAAC,gBAAGvB,OAAA,CAACH,SAAS;MAACiB,KAAK,EAAE,SAAAA,MAACe,CAAC;QAAA,OAAKd,QAAQ,CAACc,CAAC,CAACC,KAAK,CAACC,MAAM,CAAC;MAAA,CAAC;MAACC,IAAI,EAAER;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,GAAGb,IAAI,IAAI,CAAC,gBAAGvB,OAAA,CAACF,WAAW;MAACuC,QAAQ,EAAEZ,eAAgB;MAACa,QAAQ,EAAEA,QAAS;MAAClB,QAAQ,EAAEA;IAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,gBAChLpC,OAAA,CAACJ,MAAM;MAACyC,QAAQ,EAAEZ,eAAgB;MAACa,QAAQ,EAAEA,QAAS;MAAClB,QAAQ,EAAEA;IAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvE,CAAC;AAGZ;AAAClC,EAAA,CAnCuBD,KAAK;EAAA,QASVP,WAAW;AAAA;AAAA6C,EAAA,GATNtC,KAAK;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}