{"ast":null,"code":"import _slicedToArray from \"C:/Users/victo/Documents/GitHub/Projeto_Linos/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\victo\\\\Documents\\\\GitHub\\\\Projeto_Linos\\\\React\\\\src\\\\pages\\\\Reset.js\",\n  _s = $RefreshSig$();\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link, useNavigate } from \"react-router-dom\";\nimport \"../components/Tela.css\";\nimport Header from \"../components/Header.js\";\nimport Reset3 from \"../components/Reset/Reset3\";\nimport SendEmail from \"../components/Reset/SendEmail\";\nimport ConfirmCode from \"../components/Reset/ConfirmCode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Reset() {\n  _s();\n  // essa página deve possuir 3 componentes dinâmicos, confirmar email => confirmar código => mudar a senha\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password1 = _useState4[0],\n    setPassword1 = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    redirect = _useState6[0],\n    setRedirect = _useState6[1];\n  var navigate = useNavigate();\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    page = _useState8[0],\n    setPage = _useState8[1];\n  function cadastroUsuario(e) {\n    e.preventDefault();\n    if (password1 === password) {\n      console.log(\"Senha: \".concat(password));\n      setRedirect(true);\n    } else {\n      console.log(\"Senhas diferentes\");\n    }\n  }\n  var p = 0;\n  var changePage = function changePage(e) {\n    e.preventDefault();\n    p++;\n    if (p > 2) {\n      p = 0;\n    }\n  };\n  switch (p) {\n    case 0:\n      setPage(0);\n      break;\n    case 1:\n      setPage(1);\n      break;\n    case 2:\n      setPage(2);\n  }\n  console.log(page);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SendEmail, {\n      cadastro: cadastroUsuario,\n      redirect: redirect,\n      navigate: navigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: function onClick(e) {\n        return changePage(e);\n      },\n      children: \"Mudar P\\xE0gina\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Reset, \"myGzQW44XqYM/vZknswBKqPwVEM=\", false, function () {\n  return [useNavigate];\n});\n_c = Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["Button","Form","Row","Col","useState","BrowserRouter","Router","Routes","Route","Link","useNavigate","Header","Reset3","SendEmail","ConfirmCode","jsxDEV","_jsxDEV","Fragment","_Fragment","Reset","_s","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","password1","setPassword1","_useState5","_useState6","redirect","setRedirect","navigate","_useState7","_useState8","page","setPage","cadastroUsuario","e","preventDefault","console","log","concat","p","changePage","children","cadastro","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/victo/Documents/GitHub/Projeto_Linos/React/src/pages/Reset.js"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { useState } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Link, useNavigate} from \"react-router-dom\";\r\nimport \"../components/Tela.css\"\r\nimport Header from \"../components/Header.js\";\r\nimport Reset3 from \"../components/Reset/Reset3\";\r\nimport SendEmail from \"../components/Reset/SendEmail\";\r\nimport ConfirmCode from \"../components/Reset/ConfirmCode\";\r\n\r\n\r\nexport default function Reset() {\r\n// essa página deve possuir 3 componentes dinâmicos, confirmar email => confirmar código => mudar a senha\r\n  const [password, setPassword] = useState()\r\n  const [password1, setPassword1] = useState()\r\n  const [redirect, setRedirect] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const [page, setPage] = useState(0);\r\n  function cadastroUsuario(e){\r\n    e.preventDefault()\r\n    if(password1 === password){\r\n      console.log(`Senha: ${password}`)\r\n      setRedirect(true);\r\n    } else {\r\n      console.log(\"Senhas diferentes\")\r\n    }\r\n  }\r\n  let p = 0;\r\n\r\n  const changePage = (e) =>{\r\n      e.preventDefault();\r\n      p++;\r\n      if(p>2){\r\n        p=0;\r\n      }\r\n  }\r\n  switch(p){\r\n      case 0: setPage(0);\r\n      break;\r\n      case 1: setPage(1);\r\n      break;\r\n      case 2: setPage(2);\r\n  }\r\n      console.log(page);\r\n\r\n  return (\r\n    <>\r\n    <SendEmail cadastro={cadastroUsuario} redirect={redirect} navigate={navigate}/>\r\n    <Button onClick={(e) => changePage(e)} >Mudar Pàgina</Button>\r\n    </>\r\n    )\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}