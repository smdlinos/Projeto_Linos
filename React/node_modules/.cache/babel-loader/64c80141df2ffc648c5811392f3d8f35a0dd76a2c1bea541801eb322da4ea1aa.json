{"ast":null,"code":"var Stream = require('stream');\nvar util = require('util');\nvar Response = module.exports = function (res) {\n  this.offset = 0;\n  this.readable = true;\n};\nutil.inherits(Response, Stream);\nvar capable = {\n  streaming: true,\n  status2: true\n};\nfunction parseHeaders(res) {\n  var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n  var headers = {};\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    if (line === '') continue;\n    var m = line.match(/^([^:]+):\\s*(.*)/);\n    if (m) {\n      var key = m[1].toLowerCase(),\n        value = m[2];\n      if (headers[key] !== undefined) {\n        if (isArray(headers[key])) {\n          headers[key].push(value);\n        } else {\n          headers[key] = [headers[key], value];\n        }\n      } else {\n        headers[key] = value;\n      }\n    } else {\n      headers[line] = true;\n    }\n  }\n  return headers;\n}\nResponse.prototype.getResponse = function (xhr) {\n  var respType = String(xhr.responseType).toLowerCase();\n  if (respType === 'blob') return xhr.responseBlob || xhr.response;\n  if (respType === 'arraybuffer') return xhr.response;\n  return xhr.responseText;\n};\nResponse.prototype.getHeader = function (key) {\n  return this.headers[key.toLowerCase()];\n};\nResponse.prototype.handle = function (res) {\n  if (res.readyState === 2 && capable.status2) {\n    try {\n      this.statusCode = res.status;\n      this.headers = parseHeaders(res);\n    } catch (err) {\n      capable.status2 = false;\n    }\n    if (capable.status2) {\n      this.emit('ready');\n    }\n  } else if (capable.streaming && res.readyState === 3) {\n    try {\n      if (!this.statusCode) {\n        this.statusCode = res.status;\n        this.headers = parseHeaders(res);\n        this.emit('ready');\n      }\n    } catch (err) {}\n    try {\n      this._emitData(res);\n    } catch (err) {\n      capable.streaming = false;\n    }\n  } else if (res.readyState === 4) {\n    if (!this.statusCode) {\n      this.statusCode = res.status;\n      this.emit('ready');\n    }\n    this._emitData(res);\n    if (res.error) {\n      this.emit('error', this.getResponse(res));\n    } else this.emit('end');\n    this.emit('close');\n  }\n};\nResponse.prototype._emitData = function (res) {\n  var respBody = this.getResponse(res);\n  if (respBody.toString().match(/ArrayBuffer/)) {\n    this.emit('data', new Uint8Array(respBody, this.offset));\n    this.offset = respBody.byteLength;\n    return;\n  }\n  if (respBody.length > this.offset) {\n    this.emit('data', respBody.slice(this.offset));\n    this.offset = respBody.length;\n  }\n};\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};","map":{"version":3,"names":["Stream","require","util","Response","module","exports","res","offset","readable","inherits","capable","streaming","status2","parseHeaders","lines","getAllResponseHeaders","split","headers","i","length","line","m","match","key","toLowerCase","value","undefined","isArray","push","prototype","getResponse","xhr","respType","String","responseType","responseBlob","response","responseText","getHeader","handle","readyState","statusCode","status","err","emit","_emitData","error","respBody","toString","Uint8Array","byteLength","slice","Array","xs","Object","call"],"sources":["C:/Users/victo/Documents/GitHub/Projeto_Linos/React/node_modules/http-browserify/lib/response.js"],"sourcesContent":["var Stream = require('stream');\nvar util = require('util');\n\nvar Response = module.exports = function (res) {\n    this.offset = 0;\n    this.readable = true;\n};\n\nutil.inherits(Response, Stream);\n\nvar capable = {\n    streaming : true,\n    status2 : true\n};\n\nfunction parseHeaders (res) {\n    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n    var headers = {};\n    for (var i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        if (line === '') continue;\n        \n        var m = line.match(/^([^:]+):\\s*(.*)/);\n        if (m) {\n            var key = m[1].toLowerCase(), value = m[2];\n            \n            if (headers[key] !== undefined) {\n            \n                if (isArray(headers[key])) {\n                    headers[key].push(value);\n                }\n                else {\n                    headers[key] = [ headers[key], value ];\n                }\n            }\n            else {\n                headers[key] = value;\n            }\n        }\n        else {\n            headers[line] = true;\n        }\n    }\n    return headers;\n}\n\nResponse.prototype.getResponse = function (xhr) {\n    var respType = String(xhr.responseType).toLowerCase();\n    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n    if (respType === 'arraybuffer') return xhr.response;\n    return xhr.responseText;\n}\n\nResponse.prototype.getHeader = function (key) {\n    return this.headers[key.toLowerCase()];\n};\n\nResponse.prototype.handle = function (res) {\n    if (res.readyState === 2 && capable.status2) {\n        try {\n            this.statusCode = res.status;\n            this.headers = parseHeaders(res);\n        }\n        catch (err) {\n            capable.status2 = false;\n        }\n        \n        if (capable.status2) {\n            this.emit('ready');\n        }\n    }\n    else if (capable.streaming && res.readyState === 3) {\n        try {\n            if (!this.statusCode) {\n                this.statusCode = res.status;\n                this.headers = parseHeaders(res);\n                this.emit('ready');\n            }\n        }\n        catch (err) {}\n        \n        try {\n            this._emitData(res);\n        }\n        catch (err) {\n            capable.streaming = false;\n        }\n    }\n    else if (res.readyState === 4) {\n        if (!this.statusCode) {\n            this.statusCode = res.status;\n            this.emit('ready');\n        }\n        this._emitData(res);\n        \n        if (res.error) {\n            this.emit('error', this.getResponse(res));\n        }\n        else this.emit('end');\n        \n        this.emit('close');\n    }\n};\n\nResponse.prototype._emitData = function (res) {\n    var respBody = this.getResponse(res);\n    if (respBody.toString().match(/ArrayBuffer/)) {\n        this.emit('data', new Uint8Array(respBody, this.offset));\n        this.offset = respBody.byteLength;\n        return;\n    }\n    if (respBody.length > this.offset) {\n        this.emit('data', respBody.slice(this.offset));\n        this.offset = respBody.length;\n    }\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}