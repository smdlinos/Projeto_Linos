{"ast":null,"code":"import _classCallCheck from \"C:/Users/Alexandre/Documents/GitHub/Projeto_Linos/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Alexandre/Documents/GitHub/Projeto_Linos/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Alexandre/Documents/GitHub/Projeto_Linos/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Alexandre/Documents/GitHub/Projeto_Linos/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alexandre\\\\Documents\\\\GitHub\\\\Projeto_Linos\\\\react\\\\src\\\\components\\\\Certificado\\\\PdfButton.js\";\nimport React from 'react';\nimport Certificado from \"../imagens/CertificadoQuests.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar PdfButton = /*#__PURE__*/function (_React$Component) {\n  _inherits(PdfButton, _React$Component);\n  var _super = _createSuper(PdfButton);\n  function PdfButton() {\n    var _this;\n    _classCallCheck(this, PdfButton);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    // generatePdf = () => {\n    //   // Receber o arquivo\n    //   var receberArquivo = { Certificado }\n    //   // Carregar a imagem\n    //   var carregarImagem = receberArquivo[0];\n    //   //console.log(carregarImagem);\n    //   // FileReader - permite ler o conteudo do arquivo do computador do usuario\n    //   var lerArquivo = new FileReader();\n    //   // O evento onload ocorre quando um objeto é carregado\n    //   lerArquivo.onload = function (arquivoCarregado) {\n    //     // Converter a imagem para base64\n    //     var imagemBase64 = arquivoCarregado.target.result;\n    //     let doc = new window.jspdf.jsPDF();\n    //     doc.text('Hello World!', 10, 10);\n    //     doc.addImage(imagemBase64, 0, 0, 100, 100);\n    //     doc.save('sample.pdf');\n    //   }\n    //   // O metodo readAsDataURL e usado para ler o conteudo\n    //   lerArquivo.readAsDataURL(carregarImagem);\n    // }\n    _this.generatePdf = function () {\n      // Acessando as props\n      var user = _this.props.user;\n      var ch = _this.props.ch;\n\n      // Você agora tem acesso aos valores de user e ch\n      console.log(user, ch);\n\n      // URL da imagem\n      var imageURL = {\n        Certificado: Certificado\n      };\n\n      // Fetch da imagem\n      var response = fetch(imageURL);\n      var blob = response.blob();\n\n      // Cria um FileReader para ler o blob da imagem\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        // Cria uma nova instância do jsPDF\n        var doc = new jsPDF();\n\n        // Adiciona a imagem ao PDF\n        doc.addImage(reader.result, \"JPEG\", 10, 10, 180, 160);\n        doc.text(user, 10, 10);\n        doc.text(ch, 20, 20);\n\n        // Salva o PDF\n        doc.save(\"documento-com-imagem.pdf\");\n      };\n\n      // Lê o blob da imagem como dataURL\n      reader.readAsDataURL(blob);\n    };\n    return _this;\n  }\n  _createClass(PdfButton, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.loadImageAndCreatePdf,\n        className: \"botao botao_pdf p-2 pt-3\",\n        children: \"Gerar PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n  return PdfButton;\n}(React.Component);\nexport default PdfButton;","map":{"version":3,"names":["React","Certificado","jsxDEV","_jsxDEV","PdfButton","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","generatePdf","user","props","ch","console","log","imageURL","response","fetch","blob","reader","FileReader","onloadend","doc","jsPDF","addImage","result","text","save","readAsDataURL","_createClass","key","value","render","onClick","loadImageAndCreatePdf","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Component"],"sources":["C:/Users/Alexandre/Documents/GitHub/Projeto_Linos/react/src/components/Certificado/PdfButton.js"],"sourcesContent":["import React from 'react';\r\nimport Certificado from \"../imagens/CertificadoQuests.png\";\r\n\r\nclass PdfButton extends React.Component {\r\n  // generatePdf = () => {\r\n  //   // Receber o arquivo\r\n  //   var receberArquivo = { Certificado }\r\n\r\n  //   // Carregar a imagem\r\n  //   var carregarImagem = receberArquivo[0];\r\n  //   //console.log(carregarImagem);\r\n\r\n  //   // FileReader - permite ler o conteudo do arquivo do computador do usuario\r\n  //   var lerArquivo = new FileReader();\r\n\r\n  //   // O evento onload ocorre quando um objeto é carregado\r\n  //   lerArquivo.onload = function (arquivoCarregado) {\r\n  //     // Converter a imagem para base64\r\n  //     var imagemBase64 = arquivoCarregado.target.result;\r\n\r\n  //     let doc = new window.jspdf.jsPDF();\r\n  //     doc.text('Hello World!', 10, 10);\r\n  //     doc.addImage(imagemBase64, 0, 0, 100, 100);\r\n  //     doc.save('sample.pdf');\r\n  //   }\r\n\r\n  //   // O metodo readAsDataURL e usado para ler o conteudo\r\n  //   lerArquivo.readAsDataURL(carregarImagem);\r\n\r\n\r\n  // }\r\n\r\n  generatePdf = () => {\r\n     // Acessando as props\r\n     const user = this.props.user;\r\n     const ch = this.props.ch;\r\n \r\n     // Você agora tem acesso aos valores de user e ch\r\n     console.log(user, ch);\r\n\r\n    // URL da imagem\r\n    const imageURL = {Certificado};\r\n  \r\n    // Fetch da imagem\r\n    const response = fetch(imageURL);\r\n    const blob = response.blob();\r\n    \r\n    // Cria um FileReader para ler o blob da imagem\r\n    const reader = new FileReader();\r\n    reader.onloadend = function () {\r\n      // Cria uma nova instância do jsPDF\r\n      const doc = new jsPDF();\r\n    \r\n      // Adiciona a imagem ao PDF\r\n      doc.addImage(reader.result, \"JPEG\", 10, 10, 180, 160);\r\n      doc.text(user, 10, 10)\r\n      doc.text(ch, 20, 20)\r\n    \r\n      // Salva o PDF\r\n      doc.save(\"documento-com-imagem.pdf\");\r\n    }\r\n  \r\n    // Lê o blob da imagem como dataURL\r\n    reader.readAsDataURL(blob);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button onClick={this.loadImageAndCreatePdf} className='botao botao_pdf p-2 pt-3'>Gerar PDF</button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PdfButton;"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,IAErDC,SAAS,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,SAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,SAAA;EAAA,SAAAA,UAAA;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,SAAA;IAAA,SAAAO,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAAP,KAAA,GAAAF,MAAA,CAAAU,IAAA,CAAAC,KAAA,CAAAX,MAAA,SAAAY,MAAA,CAAAL,IAAA;IACb;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IAGA;IAAAL,KAAA,CAEAW,WAAW,GAAG,YAAM;MACjB;MACA,IAAMC,IAAI,GAAGZ,KAAA,CAAKa,KAAK,CAACD,IAAI;MAC5B,IAAME,EAAE,GAAGd,KAAA,CAAKa,KAAK,CAACC,EAAE;;MAExB;MACAC,OAAO,CAACC,GAAG,CAACJ,IAAI,EAAEE,EAAE,CAAC;;MAEtB;MACA,IAAMG,QAAQ,GAAG;QAACzB,WAAW,EAAXA;MAAW,CAAC;;MAE9B;MACA,IAAM0B,QAAQ,GAAGC,KAAK,CAACF,QAAQ,CAAC;MAChC,IAAMG,IAAI,GAAGF,QAAQ,CAACE,IAAI,CAAC,CAAC;;MAE5B;MACA,IAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,YAAY;QAC7B;QACA,IAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;;QAEvB;QACAD,GAAG,CAACE,QAAQ,CAACL,MAAM,CAACM,MAAM,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QACrDH,GAAG,CAACI,IAAI,CAAChB,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;QACtBY,GAAG,CAACI,IAAI,CAACd,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;QAEpB;QACAU,GAAG,CAACK,IAAI,CAAC,0BAA0B,CAAC;MACtC,CAAC;;MAED;MACAR,MAAM,CAACS,aAAa,CAACV,IAAI,CAAC;IAC5B,CAAC;IAAA,OAAApB,KAAA;EAAA;EAAA+B,YAAA,CAAApC,SAAA;IAAAqC,GAAA;IAAAC,KAAA,EAED,SAAAC,OAAA,EAAS;MACP,oBACExC,OAAA;QAAQyC,OAAO,EAAE,IAAI,CAACC,qBAAsB;QAACC,SAAS,EAAC,0BAA0B;QAAAC,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAExG;EAAC;EAAA,OAAA/C,SAAA;AAAA,EAnEqBJ,KAAK,CAACoD,SAAS;AAsEvC,eAAehD,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}